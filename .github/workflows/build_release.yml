name: EventulaEntranceClient_build_release

on:
  push:
    branches:
    - main
    tags: [ v**]
    paths:
    - '!**'

env:
  # DOTNET6_VERSION: '6.0' # The .NET SDK version to use
  # DOTNET5_VERSION: '5.0' # still used for electron
  DOTNET7_VERSION: '7.0' # still used for electron

jobs:
  build_windows_client_x64:
    runs-on: windows-2022
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET7_VERSION }}
    - name: Install dependencies
      run: dotnet tool install ElectronNET.CLI -g
    - name: get Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "EVENTULAENTRANCECLIENTVER=$(echo ${GITHUB_REF} | sed 's|refs/heads/||g' | sed 's|refs/tags/v||g' | sed 's|-beta||g' )" >> $GITHUB_ENV
      shell: bash
    - name: get Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "EVENTULAENTRANCECLIENTVER=1.0.0" >> $GITHUB_ENV
      shell: bash
    - name: set client version
      run: 'sed -i "s|\"buildVersion\": \".*\"|\"buildVersion\": \"$EVENTULAENTRANCECLIENTVER\"|g" electron.manifest.json'
      shell: bash
    - name: Build
      run: electronize build /target win
    - name: rename
      run: Rename-Item -Path "EventulaEntranceClient Setup*.exe" -NewName "EventulaEntranceClient_Setup.exe"
      shell: pwsh
      working-directory: ${{ github.workspace }}\bin\Desktop
    - name: upload artifact windows client x64 msi
      uses: actions/upload-artifact@v3
      with:
        name: EventulaEntranceClient
        path: ./bin/Desktop/EventulaEntranceClient_Setup.exe
        retention-days: 1


  build_linux_client_x64:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET7_VERSION }}
    - name: Install dependencies
      run: dotnet tool install ElectronNET.CLI -g
    - name: get Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "EVENTULAENTRANCECLIENTVER=$(echo ${GITHUB_REF} | sed 's|refs/heads/||g' | sed 's|refs/tags/v||g' | sed 's|-beta||g' )" >> $GITHUB_ENV
      shell: bash
    - name: get Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "EVENTULAENTRANCECLIENTVER=1.0.0" >> $GITHUB_ENV
      shell: bash
    - name: set client version
      run: 'sed -i "s|\"buildVersion\": \".*\"|\"buildVersion\": \"$EVENTULAENTRANCECLIENTVER\"|g" electron.manifest.json'
      shell: bash
    - name: Build
      run: electronize build /target linux
    - name: rename
      run: mv EventulaEntranceClient*.AppImage EventulaEntranceClient.AppImage
      working-directory: ${{ github.workspace }}/bin/Desktop
    - name: upload artifact linux client x64 appimage
      uses: actions/upload-artifact@v3
      with:
        name: EventulaEntranceClientLinux
        path: ./bin/Desktop/EventulaEntranceClient.AppImage
        retention-days: 1

  release:
     name: Release
     if: ${{ startsWith(github.ref, 'refs/tags/v') }}
     needs:
     - build_windows_client_x64
     - build_linux_client_x64
     runs-on: ubuntu-latest
     steps:
     - name: get artifacts
       uses: actions/download-artifact@v3
     - name: Display structure of downloaded files
       run: ls -R
     - name: Release
       if: ${{ !(contains(github.ref, '-beta')) }}
       uses: softprops/action-gh-release@v1
       with:
        files: |
          ./EventulaEntranceClient/EventulaEntranceClient_Setup.exe
          ./EventulaEntranceClientLinux/EventulaEntranceClient.AppImage
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     - name: pre Release
       if: ${{ (contains(github.ref, '-beta')) }}
       uses: softprops/action-gh-release@v1
       with:
        prerelease: true
        files: |
          ./EventulaEntranceClient/EventulaEntranceClient_Setup.exe
          ./EventulaEntranceClientLinux/EventulaEntranceClient.AppImage
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
